1、kafka中一个topic下可以有多个分区，每个分区有多个副本，多个副本存在于多个broker上

2、副本， 副本分为两类
    主副本(leader) 所有的生产者、消费者的读写服务由主副本提供
    追随副本(follower) 追随副本不提供任何读写服务

    设计原因：
        1、实现read-your-writes
         说白了就是生产者生产完消息消费者即可消费，如果追随副本也提供读的能力 但是追随副本异步同步消息就有可能会导致消息生产了，但是消费者看不到
        2、便于实现单调读
         比如副本1、2，被同一个消费者消费，副本1从主分区同步完后2还未同步，此时消费者先从1读取消息再从2读取消息就会出现消息一会存在一会不存在的现象


    In-sync-replicas(ISR) 追随副本从主副本同步数据是异步的，就会存在和主副本的差异。判定追随副本和主副本同步的因素是replica_lag_time_max_ms,
      默认10ms，追随副本和主副本数据相差不超过10ms，认为是同步的，即在ISR集合内，否则从ISR集合删除(主副本一定在ISR集合内)
    Unclean(领导者选举)
      当ISR集合为空时，ISR集合外存活的副本被称为非同步副本，是否可以从非同步副本中选主leader，取决于参数unclean_leader_election_enable=true or false
      * true时，保证了服务的高可用，但是非同步副本落后旧leader数据太多，存在数据丢失问题
      * false时， 保证了数据的一致性，但是无法对外提供服务

3、副本作用
    当主副本挂掉或是说主副本所在的broker宕机，zk的监控机制会发现并从副本中选取最新的主副本

== CAP理论
 一个分布式系统只能满足其中的两项：一致性（Consistency）、可用性（Availability）、分区容错性（Partition tolerance）